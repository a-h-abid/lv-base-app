version: '3.7'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}

services:

  web-app:
    image: ${COMPOSE_PROJECT_NAME}_web-app:${DOCKER_BUILD_MODE}
    build:
      context: ${DOCKER_BUILD_CONTEXT_DIR}
      dockerfile: docker/web-app/web-app.Dockerfile
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - NO_PROXY=${NO_PROXY}
        - BUILD_MODE=${DOCKER_BUILD_MODE}
        - TIMEZONE=${TIMEZONE}
    env_file: web-app/web-app.env
    networks:
      - frontend
      - backend
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"

  db:
    image: ${COMPOSE_PROJECT_NAME}_db:latest
    build:
      context: ${DOCKER_BUILD_CONTEXT_DIR}
      dockerfile: docker/db/db.Dockerfile
    env_file: db/db.env
    volumes:
      - ${DB_DATA_VOLUME}:/var/lib/mysql
    networks:
      - backend

  adminer:
    image: ${COMPOSE_PROJECT_NAME}_adminer:latest
    build:
      context: ../
      dockerfile: docker/adminer/adminer.Dockerfile
    ports:
      - "${ADMINER_PUBLISH_PORT}:8080"
    depends_on:
      - db
    networks:
      - frontend
      - backend

  redis:
    image: ${COMPOSE_PROJECT_NAME}_redis:latest
    build:
      context: ${DOCKER_BUILD_CONTEXT_DIR}
      dockerfile: docker/redis/redis.Dockerfile
    networks:
      - backend

  echo-server:
    image: ${COMPOSE_PROJECT_NAME}_echo-server:latest
    build:
      context: ${DOCKER_BUILD_CONTEXT_DIR}
      dockerfile: docker/echo-server/echo-server.Dockerfile
    depends_on:
      - redis
    ports:
      - "${ECHO_SERVER_PUBLISH_PORT}:6001"
    networks:
      - frontend
      - backend

  queue:
    image: ${COMPOSE_PROJECT_NAME}_queue:${DOCKER_BUILD_MODE}
    build:
      context: ${DOCKER_BUILD_CONTEXT_DIR}
      dockerfile: docker/queue/queue.Dockerfile
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - NO_PROXY=${NO_PROXY}
        - BUILD_MODE=${DOCKER_BUILD_MODE}
        - TIMEZONE=${TIMEZONE}
    env_file: queue/queue.env
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    depends_on:
      - redis
    tty: true
    networks:
      - backend

  node:
    image: ${COMPOSE_PROJECT_NAME}_node:latest
    build:
      context: ${DOCKER_BUILD_CONTEXT_DIR}
      dockerfile: docker/node/node.Dockerfile
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - NO_PROXY=${NO_PROXY}
