version: '3.7'

networks:
  default:
    driver: ${NETWORKS_DRIVER}

volumes:
  redis:
    driver: ${VOLUMES_DRIVER}

services:

  app:
    image: ${COMPOSE_PROJECT_NAME}_app:${DOCKER_BUILD_MODE}
    build:
      context: ${DOCKER_BUILD_CONTEXT_DIR}
      dockerfile: docker/app/app.Dockerfile
      args:
        - HTTP_PROXY=${APP_HTTP_PROXY}
        - HTTPS_PROXY=${APP_HTTPS_PROXY}
        - NO_PROXY=${APP_NO_PROXY}
        - BUILD_MODE=${DOCKER_BUILD_MODE}
        - TIMEZONE=${TIMEZONE}
    restart: always
    environment:
      - CONTAINER_ROLE=app
    depends_on:
      - redis
    networks:
      - default

  queue:
    image: ${COMPOSE_PROJECT_NAME}_app:${DOCKER_BUILD_MODE}
    tty: true
    restart: always
    environment:
      - CONTAINER_ROLE=queue
    depends_on:
      - redis
    networks:
      - default

  cron:
    image: ${COMPOSE_PROJECT_NAME}_app:${DOCKER_BUILD_MODE}
    tty: true
    restart: always
    environment:
      - CONTAINER_ROLE=cron
    depends_on:
      - redis
    networks:
      - default

  web:
    image: ${COMPOSE_PROJECT_NAME}_web:${DOCKER_BUILD_MODE}
    build:
      context: ${DOCKER_BUILD_CONTEXT_DIR}
      dockerfile: docker/web/web.Dockerfile
      args:
        - HTTP_PROXY=${APP_HTTP_PROXY}
        - HTTPS_PROXY=${APP_HTTPS_PROXY}
        - NO_PROXY=${APP_NO_PROXY}
    restart: always
    depends_on:
      - app
    networks:
      - default

  redis:
    image: ${COMPOSE_PROJECT_NAME}_redis:latest
    build:
      context: ${DOCKER_BUILD_CONTEXT_DIR}
      dockerfile: docker/redis/redis.Dockerfile
    restart: always
    networks:
      - default
    volumes:
      - redis:/data

  echo:
    image: ${COMPOSE_PROJECT_NAME}_echo:latest
    build:
      context: ${DOCKER_BUILD_CONTEXT_DIR}
      dockerfile: docker/echo/echo.Dockerfile
    depends_on:
      - redis
    restart: always
    networks:
      - default

  minio:
    image: minio/minio:RELEASE.2020-04-10T03-34-42Z
    command: ["minio", "server", "/export"]
    restart: always
    networks:
      - default
