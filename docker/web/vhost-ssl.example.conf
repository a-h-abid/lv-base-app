server {
    listen 80;

    #server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;

    #server_name localhost;
    root /var/www/html/public;
    index index.php index.html index.htm;

    client_max_body_size 20m;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        resolver ${NGINX_VHOST_DNS_RESOLVER_IP} valid=10s;
        set $upstreamName ${NGINX_VHOST_UPSTREAM_APP_SERVICE_HOST_PORT};
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass $upstreamName;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    location ~ ^/echo/(.*)$ {
        resolver ${NGINX_VHOST_DNS_RESOLVER_IP} valid=10s;
        set $upstreamName ${NGINX_VHOST_UPSTREAM_ECHO_SERVICE_HOST_PORT};
        rewrite /echo/(.*) /$1 break;
        proxy_pass https://$upstreamName/$1$is_args$args;
        proxy_pass_request_headers on;
        proxy_http_version 1.1;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
    }

    location ~ /\.ht {
        deny all;
    }

    server_tokens off;

    ssl_certificate /etc/ssl/certs/fullchain.crt;
    ssl_certificate_key /etc/ssl/certs/privkey.key;
    #ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS;
    ssl_prefer_server_ciphers on;
    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 24h;
    ssl_stapling on;
    ssl_stapling_verify on;

    keepalive_timeout 300;

    # Define the specified charset to the “Content-Type” response header field
    charset utf-8;

    #add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
}
